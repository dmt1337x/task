{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { GET_ALL_USERS_DTO_PORT } from '../ports/secondary/dto/get-all-users.dto-port';\nimport { GET_ONE_USER_DTO_PORT } from '../ports/secondary/dto/get-one-user.dto-port';\nimport { UserQuery } from '../ports/primary/query/user.query';\nimport * as i0 from \"@angular/core\";\nexport class UserAlbumsState {\n  constructor(_getAllUsersDtoPort, _getOneUserDtoPort) {\n    this._getAllUsersDtoPort = _getAllUsersDtoPort;\n    this._getOneUserDtoPort = _getOneUserDtoPort;\n  }\n  getAllUsers() {\n    return this._getAllUsersDtoPort.getAllUsers().pipe(map(allUsers => allUsers.map(user => new UserQuery(user.id, this.getAvatar(), user.name, user.username, user.email, this.getAddress(user), user.phone, user.website, user.company.name))));\n  }\n  getAddress(user) {\n    return `${user.address.street},${user.address.zipcode},${user.address.city},`;\n  }\n  getAvatar() {\n    return 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/512px-Angular_full_color_logo.svg.png';\n  }\n  loadUserDetails(id) {}\n  static #_ = this.ɵfac = function UserAlbumsState_Factory(t) {\n    return new (t || UserAlbumsState)(i0.ɵɵinject(GET_ALL_USERS_DTO_PORT), i0.ɵɵinject(GET_ONE_USER_DTO_PORT));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserAlbumsState,\n    factory: UserAlbumsState.ɵfac\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;AAGpC,SAASC,sBAAsB,QAA4B,+CAA+C;AAC1G,SAASC,qBAAqB,QAA2B,8CAA8C;AACvG,SAASC,SAAS,QAAQ,mCAAmC;;AAI7D,OAAM,MAAOC,eAAe;EAC1BC,YAEUC,mBAAuC,EAAyCC,kBAAqC;IAArH,wBAAmB,GAAnBD,mBAAmB;IAA6D,uBAAkB,GAAlBC,kBAAkB;EACxG;EAEJC,WAAW;IACT,OAAO,IAAI,CAACF,mBAAmB,CAC5BE,WAAW,EAAE,CACbC,IAAI,CACHT,GAAG,CAAEU,QAAQ,IACXA,QAAQ,CAACV,GAAG,CACTW,IAAI,IACH,IAAIR,SAAS,CACXQ,IAAI,CAACC,EAAE,EACP,IAAI,CAACC,SAAS,EAAE,EAChBF,IAAI,CAACG,IAAI,EACTH,IAAI,CAACI,QAAQ,EACbJ,IAAI,CAACK,KAAK,EACV,IAAI,CAACC,UAAU,CAACN,IAAI,CAAC,EACrBA,IAAI,CAACO,KAAK,EACVP,IAAI,CAACQ,OAAO,EACZR,IAAI,CAACS,OAAO,CAACN,IAAI,CAClB,CACJ,CACF,CACF;EACL;EAEQG,UAAU,CAACN,IAAa;IAC9B,OAAO,GAAGA,IAAI,CAACU,OAAO,CAACC,MAAM,IAAIX,IAAI,CAACU,OAAO,CAACE,OAAO,IAAIZ,IAAI,CAACU,OAAO,CAACG,IAAI,GAAG;EAC/E;EAEQX,SAAS;IACf,OAAO,6HAA6H;EACtI;EAEAY,eAAe,CAACb,EAAU,GAC1B;EAAC;qBAtCUR,eAAe,cAEhBH,sBAAsB,eAC2BC,qBAAqB;EAAA;EAAA;WAHrEE,eAAe;IAAAsB,SAAftB,eAAe;EAAA","names":["map","GET_ALL_USERS_DTO_PORT","GET_ONE_USER_DTO_PORT","UserQuery","UserAlbumsState","constructor","_getAllUsersDtoPort","_getOneUserDtoPort","getAllUsers","pipe","allUsers","user","id","getAvatar","name","username","email","getAddress","phone","website","company","address","street","zipcode","city","loadUserDetails","factory"],"sourceRoot":"","sources":["E:\\WORK\\task\\projects\\user-albums\\src\\lib\\application\\state\\user-albums.state.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { GetAllUsersQueryPort } from '../ports/primary/query/get-all-users.query-port';\nimport { LoadUserDetailsCommandPort } from '../ports/primary/command/load-user-details.command-port';\nimport { GET_ALL_USERS_DTO_PORT, GetAllUsersDtoPort } from '../ports/secondary/dto/get-all-users.dto-port';\nimport { GET_ONE_USER_DTO_PORT, GetOneUserDtoPort } from '../ports/secondary/dto/get-one-user.dto-port';\nimport { UserQuery } from '../ports/primary/query/user.query';\nimport { UserDTO } from '../ports/secondary/dto/user.dto';\n\n@Injectable()\nexport class UserAlbumsState implements GetAllUsersQueryPort, LoadUserDetailsCommandPort {\n  constructor(\n    @Inject(GET_ALL_USERS_DTO_PORT)\n    private _getAllUsersDtoPort: GetAllUsersDtoPort, @Inject(GET_ONE_USER_DTO_PORT) private _getOneUserDtoPort: GetOneUserDtoPort\n  ) { }\n\n  getAllUsers(): Observable<UserQuery[]> {\n    return this._getAllUsersDtoPort\n      .getAllUsers()\n      .pipe(\n        map((allUsers) =>\n          allUsers.map(\n            (user) =>\n              new UserQuery(\n                user.id,\n                this.getAvatar(),\n                user.name,\n                user.username,\n                user.email,\n                this.getAddress(user),\n                user.phone,\n                user.website,\n                user.company.name\n              )\n          )\n        )\n      );\n  }\n\n  private getAddress(user: UserDTO) {\n    return `${user.address.street},${user.address.zipcode},${user.address.city},`;\n  }\n\n  private getAvatar() {\n    return 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/512px-Angular_full_color_logo.svg.png';\n  }\n\n  loadUserDetails(id: number): Observable<void> {\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}