{"ast":null,"code":"import { take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PhotosService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n  }\n  getAllPhotos() {\n    return this._httpClient.get('https://jsonplaceholder.typicode.com/photos').pipe(take(499));\n  }\n  getOnePhoto(id) {\n    return this._httpClient.get(`https://jsonplaceholder.typicode.com/photos/${id}`);\n  }\n  static #_ = this.ɵfac = function PhotosService_Factory(t) {\n    return new (t || PhotosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PhotosService,\n    factory: PhotosService.ɵfac\n  });\n}","map":{"version":3,"mappings":"AACA,SAAqBA,IAAI,QAAQ,MAAM;;;AAOvC,OAAM,MAAOC,aAAa;EACxBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;EAAe;EAE9CC,YAAY;IACV,OAAO,IAAI,CAACD,WAAW,CACpBE,GAAG,CAAU,6CAA6C,CAAC,CAC3DC,IAAI,CAACN,IAAI,CAAC,GAAG,CAAC,CAAC;EACpB;EAEAO,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,WAAW,CAACE,GAAG,CACzB,+CAA+CG,EAAE,EAAE,CACpD;EACH;EAAC;qBAbUP,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAQ,SAAbR,aAAa;EAAA","names":["take","PhotosService","constructor","_httpClient","getAllPhotos","get","pipe","getOnePhoto","id","factory"],"sourceRoot":"","sources":["E:\\WORK\\task\\projects\\user-albums\\src\\lib\\adapters\\secondary\\services\\photos\\photos.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, take } from 'rxjs';\nimport { GetAllPhotosDtoPort } from '../../../../application/ports/secondary/dto/get-all-photos.dto-port';\nimport { GetOnePhotoDtoPort } from '../../../../application/ports/secondary/dto/get-one-photo.dto-port';\nimport { PhotoDTO } from '../../../../application/ports/secondary/dto/photo.dto';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class PhotosService implements GetAllPhotosDtoPort, GetOnePhotoDtoPort {\n  constructor(private _httpClient: HttpClient) {}\n\n  getAllPhotos(): Observable<PhotoDTO[]> {\n    return this._httpClient\n      .get<PhoRe[]>('https://jsonplaceholder.typicode.com/photos')\n      .pipe(take(499));\n  }\n\n  getOnePhoto(id: number): Observable<PhotoDTO> {\n    return this._httpClient.get<PhotoDTO>(\n      `https://jsonplaceholder.typicode.com/photos/${id}`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}