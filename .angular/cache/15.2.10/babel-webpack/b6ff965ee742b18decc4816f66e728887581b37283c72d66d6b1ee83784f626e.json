{"ast":null,"code":"import { inject, InjectionToken } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nexport const USER_ID_PROVIDER = new InjectionToken('USER_ID_PROVIDER', {\n  factory: () => {\n    const route = inject(ActivatedRoute);\n    return {\n      userId$: route.snapshot.params['userId']\n    };\n  }\n});","map":{"version":3,"mappings":"AAAA,SAASA,MAAM,EAAEC,cAAc,QAAQ,eAAe;AACtD,SAASC,cAAc,QAAgC,iBAAiB;AAGxE,OAAO,MAAMC,gBAAgB,GAC3B,IAAIF,cAAc,CAAiB,kBAAkB,EAAE;EACrDG,OAAO,EAAE,MAAqB;IAC5B,MAAMC,KAAK,GAAmBL,MAAM,CAACE,cAAc,CAAC;IAEpD,OAAO;MACLI,OAAO,EAAED,KAAK,CAACE,QAAQ,CAACC,MAAM,CAAC,QAAQ;KACxC;EACH;CACD,CAAC","names":["inject","InjectionToken","ActivatedRoute","USER_ID_PROVIDER","factory","route","userId$","snapshot","params"],"sourceRoot":"","sources":["E:\\WORK\\task\\projects\\user-albums\\src\\lib\\application\\tokens\\user-id-token.ts"],"sourcesContent":["import { inject, InjectionToken } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport const USER_ID_PROVIDER: InjectionToken<UserIdProvider> =\n  new InjectionToken<UserIdProvider>('USER_ID_PROVIDER', {\n    factory: (): UserIdProvider => {\n      const route: ActivatedRoute = inject(ActivatedRoute);\n\n      return {\n        userId$: route.snapshot.params['userId'],\n      };\n    },\n  });\n\nexport interface UserIdProvider {\n  userId$: Observable<string>;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}