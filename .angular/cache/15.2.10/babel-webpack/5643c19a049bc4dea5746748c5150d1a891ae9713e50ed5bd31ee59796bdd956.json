{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n  }\n  getAllUsers() {\n    console.log('test');\n    return this._httpClient.get('https://jsonplaceholder.typicode.com/users');\n  }\n  getOneUser(id) {\n    return this._httpClient.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n  }\n  static #_ = this.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;EAAe;EAE9CC,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,OAAO,IAAI,CAACH,WAAW,CAACI,GAAG,CACzB,4CAA4C,CAC7C;EACH;EAEAC,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACN,WAAW,CAACI,GAAG,CACzB,8CAA8CE,EAAE,EAAE,CACnD;EACH;EAAC;qBAdUR,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAS,SAAZT,YAAY;EAAA","names":["UsersService","constructor","_httpClient","getAllUsers","console","log","get","getOneUser","id","factory"],"sourceRoot":"","sources":["E:\\WORK\\task\\projects\\user-albums\\src\\lib\\adapters\\secondary\\services\\users\\users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GetAllUsersDtoPort } from '../../../../application/ports/secondary/dto/get-all-users.dto-port';\nimport { GetOneUserDtoPort } from '../../../../application/ports/secondary/dto/get-one-user.dto-port';\nimport { UserDTO } from '../../../../application/ports/secondary/dto/user.dto';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class UsersService implements GetAllUsersDtoPort, GetOneUserDtoPort {\n  constructor(private _httpClient: HttpClient) {}\n\n  getAllUsers(): Observable<UserDTO[]> {\n    console.log('test');\n    return this._httpClient.get<UserDTO[]>(\n      'https://jsonplaceholder.typicode.com/users'\n    );\n  }\n\n  getOneUser(id: number): Observable<UserDTO> {\n    return this._httpClient.get<UserDTO>(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}