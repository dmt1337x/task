{"ast":null,"code":"import { inject, InjectionToken } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nexport const USER_ID_PROVIDER = new InjectionToken('USER_ID', {\n  factory: () => {\n    const activatedRoute = inject(ActivatedRoute);\n    return {\n      userId$: activatedRoute.params.pipe(map(params => params['userId']))\n    };\n  }\n});","map":{"version":3,"mappings":"AAAA,SAASA,MAAM,EAAEC,cAAc,QAAQ,eAAe;AAEtD,SAASC,cAAc,QAAgB,iBAAiB;AACxD,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,gBAAgB,GAC3B,IAAIH,cAAc,CAAiB,SAAS,EAAE;EAC5CI,OAAO,EAAE,MAAqB;IAC5B,MAAMC,cAAc,GAAmBN,MAAM,CAACE,cAAc,CAAC;IAC7D,OAAO;MACLK,OAAO,EAAED,cAAc,CAACE,MAAM,CAACC,IAAI,CACjCN,GAAG,CAAEK,MAAc,IAAKA,MAAM,CAAC,QAAQ,CAAC,CAAC;KAE5C;EACH;CACD,CAAC","names":["inject","InjectionToken","ActivatedRoute","map","USER_ID_PROVIDER","factory","activatedRoute","userId$","params","pipe"],"sourceRoot":"","sources":["E:\\WORK\\task\\projects\\user-albums\\src\\lib\\application\\userId.token.ts"],"sourcesContent":["import { inject, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\nexport const USER_ID_PROVIDER: InjectionToken<UserIdProvider> =\n  new InjectionToken<UserIdProvider>('USER_ID', {\n    factory: (): UserIdProvider => {\n      const activatedRoute: ActivatedRoute = inject(ActivatedRoute);\n      return {\n        userId$: activatedRoute.params.pipe(\n          map((params: Params) => params['userId'])\n        ),\n      };\n    },\n  });\n\nexport interface UserIdProvider {\n  userId$: Observable<string>;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}