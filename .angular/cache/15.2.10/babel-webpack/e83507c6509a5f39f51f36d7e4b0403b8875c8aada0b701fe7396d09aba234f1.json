{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Subject, takeUntil } from 'rxjs';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nfunction NavbarComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 5);\n    i0.ɵɵelement(1, \"input\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.searchForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.count, \" \");\n  }\n}\nexport class NavbarComponent {\n  constructor() {\n    this.showSearch = false;\n    this.searchValueEvent = new EventEmitter();\n    this._onDestroy$ = new Subject();\n    this.searchForm = new FormGroup({\n      search: new FormControl()\n    });\n  }\n  ngOnInit() {\n    this.searchForm.get('search')?.valueChanges.pipe(takeUntil(this._onDestroy$)).subscribe(search => this.searchValueEvent.emit(search));\n  }\n  ngOnDestroy() {\n    this._onDestroy$.next();\n    this._onDestroy$.complete();\n  }\n  static #_ = this.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"lib-navbar\"]],\n    inputs: {\n      showSearch: \"showSearch\",\n      count: \"count\"\n    },\n    outputs: {\n      searchValueEvent: \"searchValueEvent\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"navbar\", \"bg-body-secondary\"], [1, \"d-flex\", \"w-100\"], [1, \"d-flex\", \"justify-content-start\", \"w-100\", \"ms-4\"], [1, \"navbar-brand\", \"btn\", \"btn-primary\", \"text-white\", 3, \"routerLink\"], [\"class\", \"me-5\", 3, \"formGroup\", 4, \"ngIf\"], [1, \"me-5\", 3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"search\", \"placeholder\", \"Search\", 1, \"form-control\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"a\", 3);\n        i0.ɵɵtext(4, \"Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"a\", 3);\n        i0.ɵɵtext(6, \"Photos\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, NavbarComponent_form_7_Template, 3, 2, \"form\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", \"/users\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", \"/album\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSearch);\n      }\n    },\n    dependencies: [CommonModule, i1.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, RouterModule, i3.RouterLink],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n    changeDetection: 0\n  });\n}","map":{"version":3,"mappings":"AAAA,SAGEA,YAAY,QAKP,eAAe;AACtB,SAASC,WAAW,EAAEC,SAAS,EAAEC,mBAAmB,QAAQ,gBAAgB;AAC5E,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,OAAO,EAAEC,SAAS,QAAQ,MAAM;AACzC,SAASC,YAAY,QAAQ,iBAAiB;;;;;;;ICN1CC,+BAA+D;IAC7DA,2BAKE;IACFA,YACF;IAAAA,iBAAO;;;;IARkBA,6CAAwB;IAO/CA,eACF;IADEA,6CACF;;;ADQJ,OAAM,MAAOC,eAAe;EAR5BC;IASW,eAAU,GAAY,KAAK;IAE1B,qBAAgB,GAAyB,IAAIV,YAAY,EAAU;IAC5D,gBAAW,GAAG,IAAIK,OAAO,EAAQ;IAEzC,eAAU,GAAc,IAAIH,SAAS,CAAC;MAAES,MAAM,EAAE,IAAIV,WAAW;IAAE,CAAE,CAAC;;EAE7EW,QAAQ;IACN,IAAI,CAACC,UAAU,CACZC,GAAG,CAAC,QAAQ,CAAC,EACZC,YAAY,CAACC,IAAI,CAACV,SAAS,CAAC,IAAI,CAACW,WAAW,CAAC,CAAC,CAC/CC,SAAS,CAAEP,MAAc,IAAK,IAAI,CAACQ,gBAAgB,CAACC,IAAI,CAACT,MAAM,CAAC,CAAC;EACtE;EAEAU,WAAW;IACT,IAAI,CAACJ,WAAW,CAACK,IAAI,EAAE;IACvB,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;EAC7B;EAAC;qBAlBUd,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAe;IAAAC;MAAAC;MAAAC;IAAA;IAAAC;MAAAT;IAAA;IAAAU;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCtB5B1B,8BAAsC;QAG2CA,qBAAK;QAAAA,iBAAI;QACpFA,4BAA2E;QAAAA,sBAAM;QAAAA,iBAAI;QAEvFA,kEAQO;QACTA,iBAAM;;;QAZiDA,eAAuB;QAAvBA,qCAAuB;QACvBA,eAAuB;QAAvBA,qCAAuB;QAErEA,eAAgB;QAAhBA,qCAAgB;;;mBDcfJ,YAAY,WAAED,mBAAmB,qIAAEI,YAAY;IAAA4B;IAAAC;EAAA","names":["EventEmitter","FormControl","FormGroup","ReactiveFormsModule","CommonModule","Subject","takeUntil","RouterModule","i0","NavbarComponent","constructor","search","ngOnInit","searchForm","get","valueChanges","pipe","_onDestroy$","subscribe","searchValueEvent","emit","ngOnDestroy","next","complete","selectors","inputs","showSearch","count","outputs","standalone","features","decls","vars","consts","template","styles","changeDetection"],"sourceRoot":"","sources":["E:\\WORK\\task\\projects\\core\\src\\lib\\adapters\\primary\\components\\navbar\\navbar.component.ts","E:\\WORK\\task\\projects\\core\\src\\lib\\adapters\\primary\\components\\navbar\\navbar.component.html"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Subject, takeUntil } from 'rxjs';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'lib-navbar',\n  styleUrls: ['./navbar.component.scss'],\n  templateUrl: './navbar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  @Input() showSearch: boolean = false;\n  @Input() count: number;\n  @Output() searchValueEvent: EventEmitter<string> = new EventEmitter<string>();\n  private readonly _onDestroy$ = new Subject<void>();\n\n  readonly searchForm: FormGroup = new FormGroup({ search: new FormControl() });\n\n  ngOnInit() {\n    this.searchForm\n      .get('search')\n      ?.valueChanges.pipe(takeUntil(this._onDestroy$))\n      .subscribe((search: string) => this.searchValueEvent.emit(search));\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n    this._onDestroy$.complete();\n  }\n}\n","<nav class=\"navbar bg-body-secondary\">\r\n  <div class=\"d-flex w-100\">\r\n    <div class=\"d-flex justify-content-start w-100 ms-4\">\r\n      <a class=\"navbar-brand btn btn-primary text-white\" [routerLink]=\"'/users'\">Users</a>\r\n      <a class=\"navbar-brand btn btn-primary text-white\" [routerLink]=\"'/album'\">Photos</a>\r\n    </div>\r\n    <form *ngIf=\"showSearch\" [formGroup]=\"searchForm\" class=\"me-5\">\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"search\"\r\n        placeholder=\"Search\"\r\n        class=\"form-control\"\r\n      />\r\n      {{count}}\r\n    </form>\r\n  </div>\r\n</nav>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}