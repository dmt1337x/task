{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BehaviorSubject, Subject, takeUntil } from 'rxjs';\nimport { RouterModule } from '@angular/router';\nlet NavbarComponent = class NavbarComponent {\n  constructor(_location) {\n    this._location = _location;\n    this.showSearch = false;\n    this.showBack = true;\n    this.count = 0;\n    this.summaryTitle = '';\n    this.searchValueEvent = new EventEmitter();\n    this._onDestroy$ = new Subject();\n    this._searchSubject = new BehaviorSubject('');\n    this.search$ = this._searchSubject.asObservable();\n    this.searchForm = new FormGroup({\n      search: new FormControl()\n    });\n  }\n  ngOnInit() {\n    this.searchForm.get('search')?.valueChanges.pipe(takeUntil(this._onDestroy$)).subscribe(search => {\n      this._searchSubject.next(search);\n      this.searchValueEvent.emit(search);\n    });\n  }\n  ngOnDestroy() {\n    this._onDestroy$.next();\n    this._onDestroy$.complete();\n  }\n  goBack() {\n    this._location.back();\n  }\n  resetSearch() {\n    this.searchForm.patchValue({\n      search: ''\n    });\n  }\n};\n__decorate([Input()], NavbarComponent.prototype, \"showSearch\", void 0);\n__decorate([Input()], NavbarComponent.prototype, \"showBack\", void 0);\n__decorate([Input()], NavbarComponent.prototype, \"count\", void 0);\n__decorate([Input()], NavbarComponent.prototype, \"summaryTitle\", void 0);\n__decorate([Output()], NavbarComponent.prototype, \"searchValueEvent\", void 0);\nNavbarComponent = __decorate([Component({\n  selector: 'lib-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule]\n})], NavbarComponent);\nexport { NavbarComponent };","map":{"version":3,"mappings":";AAAA,SACEA,uBAAuB,EACvBC,SAAS,EACTC,YAAY,EACZC,KAAK,EAGLC,MAAM,QACD,eAAe;AACtB,SAASC,WAAW,EAAEC,SAAS,EAAEC,mBAAmB,QAAQ,gBAAgB;AAC5E,SAASC,YAAY,QAAkB,iBAAiB;AACxD,SAASC,eAAe,EAAEC,OAAO,EAAEC,SAAS,QAAQ,MAAM;AAC1D,SAASC,YAAY,QAAQ,iBAAiB;AAUvC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAgB1BC,YAAoBC,SAAmB;IAAnB,cAAS,GAATA,SAAS;IAfpB,eAAU,GAAY,KAAK;IAC3B,aAAQ,GAAY,IAAI;IACxB,UAAK,GAAW,CAAC;IACjB,iBAAY,GAAW,EAAE;IACxB,qBAAgB,GAAyB,IAAIb,YAAY,EAAU;IAE5D,gBAAW,GAAG,IAAIQ,OAAO,EAAQ;IAC1C,mBAAc,GAA4B,IAAID,eAAe,CACnE,EAAE,CACH;IAEQ,YAAO,GAAG,IAAI,CAACO,cAAc,CAACC,YAAY,EAAE;IAE5C,eAAU,GAAc,IAAIX,SAAS,CAAC;MAAEY,MAAM,EAAE,IAAIb,WAAW;IAAE,CAAE,CAAC;EAEnC;EAE1Cc,QAAQ;IACN,IAAI,CAACC,UAAU,CACZC,GAAG,CAAC,QAAQ,CAAC,EACZC,YAAY,CAACC,IAAI,CAACZ,SAAS,CAAC,IAAI,CAACa,WAAW,CAAC,CAAC,CAC/CC,SAAS,CAAEP,MAAc,IAAI;MAC5B,IAAI,CAACF,cAAc,CAACU,IAAI,CAACR,MAAM,CAAC;MAChC,IAAI,CAACS,gBAAgB,CAACC,IAAI,CAACV,MAAM,CAAC;IACpC,CAAC,CAAC;EACN;EAEAW,WAAW;IACT,IAAI,CAACL,WAAW,CAACE,IAAI,EAAE;IACvB,IAAI,CAACF,WAAW,CAACM,QAAQ,EAAE;EAC7B;EAEAC,MAAM;IACJ,IAAI,CAAChB,SAAS,CAACiB,IAAI,EAAE;EACvB;EAEAC,WAAW;IACT,IAAI,CAACb,UAAU,CAACc,UAAU,CAAC;MAAEhB,MAAM,EAAE;IAAE,CAAE,CAAC;EAC5C;CACD;AAvCUiB,YAARhC,KAAK,EAAE,mDAA6B;AAC5BgC,YAARhC,KAAK,EAAE,iDAA0B;AACzBgC,YAARhC,KAAK,EAAE,8CAAmB;AAClBgC,YAARhC,KAAK,EAAE,qDAA2B;AACzBgC,YAAT/B,MAAM,EAAE,yDAAqE;AALnES,eAAe,eAR3BZ,SAAS,CAAC;EACTmC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB,CAAC;EACtCC,eAAe,EAAEvC,uBAAuB,CAACwC,MAAM;EAC/CC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAClC,YAAY,EAAED,mBAAmB,EAAEK,YAAY;CAC1D,CAAC,GACWC,eAAe,CAwC3B;SAxCYA,eAAe","names":["ChangeDetectionStrategy","Component","EventEmitter","Input","Output","FormControl","FormGroup","ReactiveFormsModule","CommonModule","BehaviorSubject","Subject","takeUntil","RouterModule","NavbarComponent","constructor","_location","_searchSubject","asObservable","search","ngOnInit","searchForm","get","valueChanges","pipe","_onDestroy$","subscribe","next","searchValueEvent","emit","ngOnDestroy","complete","goBack","back","resetSearch","patchValue","__decorate","selector","templateUrl","styleUrls","changeDetection","OnPush","standalone","imports"],"sourceRoot":"","sources":["E:\\WORK\\task\\projects\\core\\src\\lib\\adapters\\primary\\components\\navbar\\navbar.component.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule, Location } from '@angular/common';\nimport { BehaviorSubject, Subject, takeUntil } from 'rxjs';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'lib-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  @Input() showSearch: boolean = false;\n  @Input() showBack: boolean = true;\n  @Input() count: number = 0;\n  @Input() summaryTitle: string = '';\n  @Output() searchValueEvent: EventEmitter<string> = new EventEmitter<string>();\n\n  private readonly _onDestroy$ = new Subject<void>();\n  private _searchSubject: BehaviorSubject<string> = new BehaviorSubject<string>(\n    ''\n  );\n\n  readonly search$ = this._searchSubject.asObservable();\n\n  readonly searchForm: FormGroup = new FormGroup({ search: new FormControl() });\n\n  constructor(private _location: Location) {}\n\n  ngOnInit(): void {\n    this.searchForm\n      .get('search')\n      ?.valueChanges.pipe(takeUntil(this._onDestroy$))\n      .subscribe((search: string) => {\n        this._searchSubject.next(search);\n        this.searchValueEvent.emit(search);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n    this._onDestroy$.complete();\n  }\n\n  goBack(): void {\n    this._location.back();\n  }\n\n  resetSearch() {\n    this.searchForm.patchValue({ search: '' });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}