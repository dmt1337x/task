{"ast":null,"code":"import { map } from 'rxjs';\nimport { GET_ALL_USERS_DTO_PORT } from '../ports/secondary/dto/get-all-users.dto-port';\nimport { UserQuery } from '../ports/primary/query/user.query';\nimport * as i0 from \"@angular/core\";\nexport class UserAlbumsState {\n  constructor(_getAllUsersDtoPort) {\n    this._getAllUsersDtoPort = _getAllUsersDtoPort;\n  }\n  getAllUsers() {\n    return this._getAllUsersDtoPort.getAllUsers().pipe(map(allUsers => allUsers.map(user => new UserQuery(user.id, user.name, user.username, user.email, this.getAddress(user), user.phone, user.website, user.company.name))));\n  }\n  getAddress(user) {\n    return `${user.address.street},${user.address.zipcode},${user.address.city},`;\n  }\n  static #_ = this.ɵfac = function UserAlbumsState_Factory(t) {\n    return new (t || UserAlbumsState)(i0.ɵɵinject(GET_ALL_USERS_DTO_PORT));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserAlbumsState,\n    factory: UserAlbumsState.ɵfac\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,GAAG,QAAoB,MAAM;AAEtC,SACEC,sBAAsB,QAEjB,+CAA+C;AACtD,SAASC,SAAS,QAAQ,mCAAmC;;AAI7D,OAAM,MAAOC,eAAe;EAC1BC,YAEUC,mBAAuC;IAAvC,wBAAmB,GAAnBA,mBAAmB;EAC1B;EAEHC,WAAW;IACT,OAAO,IAAI,CAACD,mBAAmB,CAC5BC,WAAW,EAAE,CACbC,IAAI,CACHP,GAAG,CAAEQ,QAAQ,IACXA,QAAQ,CAACR,GAAG,CACTS,IAAI,IACH,IAAIP,SAAS,CACXO,IAAI,CAACC,EAAE,EACPD,IAAI,CAACE,IAAI,EACTF,IAAI,CAACG,QAAQ,EACbH,IAAI,CAACI,KAAK,EACV,IAAI,CAACC,UAAU,CAACL,IAAI,CAAC,EACrBA,IAAI,CAACM,KAAK,EACVN,IAAI,CAACO,OAAO,EACZP,IAAI,CAACQ,OAAO,CAACN,IAAI,CAClB,CACJ,CACF,CACF;EACL;EAEQG,UAAU,CAACL,IAAa;IAC9B,OAAO,GAAGA,IAAI,CAACS,OAAO,CAACC,MAAM,IAAIV,IAAI,CAACS,OAAO,CAACE,OAAO,IAAIX,IAAI,CAACS,OAAO,CAACG,IAAI,GAAG;EAC/E;EAAC;qBA9BUlB,eAAe,cAEhBF,sBAAsB;EAAA;EAAA;WAFrBE,eAAe;IAAAmB,SAAfnB,eAAe;EAAA","names":["map","GET_ALL_USERS_DTO_PORT","UserQuery","UserAlbumsState","constructor","_getAllUsersDtoPort","getAllUsers","pipe","allUsers","user","id","name","username","email","getAddress","phone","website","company","address","street","zipcode","city","factory"],"sourceRoot":"","sources":["E:\\WORK\\task\\projects\\user-albums\\src\\lib\\application\\state\\user-albums.state.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { GetAllUsersQueryPort } from '../ports/primary/query/get-all-users.query-port';\nimport {\n  GET_ALL_USERS_DTO_PORT,\n  GetAllUsersDtoPort,\n} from '../ports/secondary/dto/get-all-users.dto-port';\nimport { UserQuery } from '../ports/primary/query/user.query';\nimport { UserDTO } from '../ports/secondary/dto/user.dto';\n\n@Injectable()\nexport class UserAlbumsState implements GetAllUsersQueryPort {\n  constructor(\n    @Inject(GET_ALL_USERS_DTO_PORT)\n    private _getAllUsersDtoPort: GetAllUsersDtoPort\n  ) {}\n\n  getAllUsers(): Observable<UserQuery[]> {\n    return this._getAllUsersDtoPort\n      .getAllUsers()\n      .pipe(\n        map((allUsers) =>\n          allUsers.map(\n            (user) =>\n              new UserQuery(\n                user.id,\n                user.name,\n                user.username,\n                user.email,\n                this.getAddress(user),\n                user.phone,\n                user.website,\n                user.company.name\n              )\n          )\n        )\n      );\n  }\n\n  private getAddress(user: UserDTO) {\n    return `${user.address.street},${user.address.zipcode},${user.address.city},`;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}