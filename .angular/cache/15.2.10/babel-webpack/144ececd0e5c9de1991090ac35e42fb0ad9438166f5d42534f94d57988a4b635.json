{"ast":null,"code":"import { INIT_DETAILS_COMMAND_PORT } from '../../../../application/ports/primary/command/init-details.command-port';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class TestResolver {\n  constructor(_initDetailsCommandPort) {\n    this._initDetailsCommandPort = _initDetailsCommandPort;\n  }\n  resolve(route, state) {\n    return this._initDetailsCommandPort.initDetails(route.params['userId']).pipe(map(() => void 0));\n  }\n  static #_ = this.ɵfac = function TestResolver_Factory(t) {\n    return new (t || TestResolver)(i0.ɵɵinject(INIT_DETAILS_COMMAND_PORT));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TestResolver,\n    factory: TestResolver.ɵfac\n  });\n}","map":{"version":3,"mappings":"AAOA,SACEA,yBAAyB,QAEpB,yEAAyE;AAChF,SAASC,GAAG,QAAQ,gBAAgB;;AAGpC,OAAM,MAAOC,YAAY;EACvBC,YAEUC,uBAA+C;IAA/C,4BAAuB,GAAvBA,uBAAuB;EAC9B;EAEHC,OAAO,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACH,uBAAuB,CAChCI,WAAW,CAACF,KAAK,CAACG,MAAM,CAAC,QAAQ,CAAC,CAAC,CACnCC,IAAI,CAACT,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;EAC5B;EAAC;qBAbUC,YAAY,cAEbF,yBAAyB;EAAA;EAAA;WAFxBE,YAAY;IAAAS,SAAZT,YAAY;EAAA","names":["INIT_DETAILS_COMMAND_PORT","map","TestResolver","constructor","_initDetailsCommandPort","resolve","route","state","initDetails","params","pipe","factory"],"sourceRoot":"","sources":["E:\\WORK\\task\\projects\\user-albums\\src\\lib\\adapters\\primary\\resolvers\\test\\test.resolver.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {\n  INIT_DETAILS_COMMAND_PORT,\n  InitDetailsCommandPort,\n} from '../../../../application/ports/primary/command/init-details.command-port';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TestResolver implements Resolve<void> {\n  constructor(\n    @Inject(INIT_DETAILS_COMMAND_PORT)\n    private _initDetailsCommandPort: InitDetailsCommandPort\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<void> {\n    return this._initDetailsCommandPort\n      .initDetails(route.params['userId'])\n      .pipe(map(() => void 0));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}